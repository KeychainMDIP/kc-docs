"use strict";(self.webpackChunkkc_docs=self.webpackChunkkc_docs||[]).push([[120],{3634:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(4848),a=t(8453);const i={title:"Keychain-MDIP CLI User Manual",sidebar_label:"User Manual"},l=void 0,o={id:"CLI-user-manual/README",title:"Keychain-MDIP CLI User Manual",description:"The CLI is a Command Line Interface to the Keychain implementation of the MultiDimensional Identity Protocol (MDIP). kc (short for KeyChain) is a script invoked in a unix-like terminal environment (bash, zsh, etc).",source:"@site/kc/doc/CLI-user-manual/README.md",sourceDirName:"CLI-user-manual",slug:"/CLI-user-manual/",permalink:"/pr-preview/pr-$pr/docs/CLI-user-manual/",draft:!1,unlisted:!1,editUrl:"https://github.com/keychainmdip/kc-docs/tree/main/packages/create-docusaurus/templates/shared/kc/doc/CLI-user-manual/README.md",tags:[],version:"current",frontMatter:{title:"Keychain-MDIP CLI User Manual",sidebar_label:"User Manual"},sidebar:"tutorialSidebar",previous:{title:"Keychain Documentation",permalink:"/pr-preview/pr-$pr/docs/"},next:{title:"Wallets",permalink:"/pr-preview/pr-$pr/docs/CLI-user-manual/wallets"}},s={},c=[{value:"Quickstart",id:"quickstart",level:2}];function d(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The CLI is a Command Line Interface to the Keychain implementation of the MultiDimensional Identity Protocol (MDIP). ",(0,r.jsx)(n.code,{children:"kc"})," (short for KeyChain) is a script invoked in a unix-like terminal environment (bash, zsh, etc)."]}),"\n",(0,r.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,r.jsx)(n.p,{children:"The Keychain-MDIP CLI is a user-facing tool used to interact with the MDIP sub-systems and networks."}),"\n",(0,r.jsx)(n.p,{children:"The Keychain CLI brings together functionality from three important sub-components:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Decentralized Identity (DID) registration and management as defined by W3C DID Core."}),"\n",(0,r.jsx)(n.li,{children:"Verifiable Credential (VC) attestation and management as defined by W3C VC Data Model."}),"\n",(0,r.jsx)(n.li,{children:"Crypto keys and wallet management."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["All the CLI commands are self-documented using the ",(0,r.jsx)(n.code,{children:"--help"})," flag, or by running ",(0,r.jsx)(n.code,{children:"kc"})," with no flags:"]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)("code",{children:"kc --help"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"Usage: keychain-cli [options] [command]\n\nKeychain CLI tool\n\nOptions:\n  -V, --version                               output the version number\n  -h, --help                                  display help for command\n\nCommands:\n  accept-credential <did> [name]              Save verifiable credential for current ID\n  add-name <name> <did>                       Adds a name for a DID\n  attest-credential <file> [registry] [name]  Sign and encrypt a bound credential file\n  backup-id                                   Backup the current ID to its registry\n  backup-wallet                               Backup wallet to encrypted DID\n  bind-credential <file> <did>                Create bound credential for a user\n  create-challenge [file] [name]              Create challenge (optionally from a file)\n  create-challenge-cc <did> [name]            Create challenge from a credential DID\n  create-credential <file> [name]             Create credential from schema file\n  create-id <name> [registry]                 Create a new decentralized ID\n  create-response <challenge>                 Create a Verifiable Presentation from a challenge\n  create-wallet                               Create new wallet (or show existing wallet)\n  decrypt-did <did>                           Decrypt an encrypted message DID\n  decrypt-json <did>                          Decrypt an encrypted JSON DID\n  encrypt-file <file> <did>                   Encrypt a file for a DID\n  encrypt-msg <msg> <did>                     Encrypt a message for a DID\n  export-did <did>                            Export DID to file\n  group-add <group> <member>                  Add a member to a group\n  group-create <name>                         Create a new group\n  group-remove <group> <member>               Remove a member from a group\n  group-test <group> [member]                 Determine if a member is in a group\n  help [command]                              display help for command\n  import-did <file>                           Import DID from file\n  import-wallet <recovery-phrase>             Create new wallet from a recovery phrase\n  list-ids                                    List IDs and show current ID\n  list-names                                  Lists names of DIDs\n  poll-create <file> [name]                   Create poll\n  poll-publish <poll>                         Publish results to poll, hiding ballots\n  poll-reveal <poll>                          Publish results to poll, revealing ballots\n  poll-template                               Generate a poll template\n  poll-unpublish <poll>                       Remove results from poll\n  poll-update <ballot>                        Add a ballot to the poll\n  poll-view <poll>                            View poll details\n  poll-vote <poll> <vote> [spoil]             Vote in a poll\n  publish-credential <did>                    Publish the existence of a credential to the current user manifest\n  recover-id <did>                            Recovers the ID from the DID\n  recover-wallet <did>                        Recover wallet from encrypted DID\n  remove-id <name>                            Deletes named ID\n  remove-name <name>                          Removes a name for a DID\n  resolve-did <did>                           Return document associated with DID\n  resolve-id                                  Resolves the current ID\n  reveal-credential <did>                     Reveal a credential to the current user manifest\n  revoke-credential <did>                     Revokes a verifiable credential\n  rotate-keys                                 Rotates keys for current user\n  show-mnemonic                               Show recovery phrase for wallet\n  show-wallet                                 Show wallet\n  sign-file <file>                            Sign a JSON file\n  unpublish-credential <did>                  Remove a credential from the current user manifest\n  use-id <name>                               Set the current ID\n  verify-file <file>                          Verify the signature in a JSON file\n  verify-response <did>                       Decrypt and validate a Verifiable Presentation\n"})})]}),"\n",(0,r.jsxs)(n.p,{children:["The following examples use a ",(0,r.jsx)(n.code,{children:"$"})," to denote the shell prompt:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash{promptUser:",metastring:"user}",children:"$ kc\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Unless you edit your shell's ",(0,r.jsx)(n.code,{children:"$PATH"})," variable, you need to invoke kc with a ",(0,r.jsx)(n.code,{children:"./"})," prefix to run the script in the current directory:"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"$ ./kc\n"})}),"\n",(0,r.jsx)(n.p,{children:"Begin by creating a new identity. This will be described in more detail later, but try it now with your own first name:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"$ kc create-id yourName\ndid:mdip:test:z3v8AuaYd1CGfC6PCQDXKyKkbt5kJ4o3h2ABBNPGyGNQfEQ99Ce\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The long string returned starting with ",(0,r.jsx)(n.code,{children:"did"})," will be unique to you. This is your new Decentralized IDentity (DID for short)."]}),"\n",(0,r.jsx)(n.p,{children:"Think of a DID as a secure reference. Only the owner of the reference can change what it points to. What makes it decentralized is that anyone can discover what it points to without involving a third party."}),"\n",(0,r.jsx)(n.p,{children:"Creating a new ID automatically creates a new wallet for your ID, which we will describe next."})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(6540);const a={},i=r.createContext(a);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);